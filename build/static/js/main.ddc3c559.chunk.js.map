{"version":3,"sources":["registerServiceWorker.js","actions.js","components/Test/Test.js","components/Login/Login.js","components/Sidebar/Sidebar.js","components/CKEditor/CKEditor.js","components/QuizEditor/QuizEditor.js","components/SRSImport/SRSImport.js","components/Course/Course.js","components/Navbar/Navbar.js","reducers/courses.js","reducers/users.js","components/WorkShop/WorkShop.js","components/TestBench/TestBench.js","components/WorkBench/WorkBench.js","components/App/App.js","components/CourseItem/CourseItem.js","reducers/tests.js","reducers/problems.js","reducers/index.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","apiUrl","REQUEST_TESTS","RECEIVE_TESTS","requestTests","type","fetchTests","requiresAuthentication","dispatch","fetch","response","json","data","tests","receivedAt","Date","now","receiveTests","SET_ARCHITECTURE_LEVEL","SET_SEARCH","setArchitectureLevel","architectureLevel","setSearch","search","REQUEST_SIGNUP","RECEIVE_SIGNUP","requestSignup","fetchSignup","email","password","method","headers","body","JSON","stringify","message","session","receiveSignup","alert","REQUEST_LOGIN","RECEIVE_LOGIN","fetchLogin","completedCourseItems","assignedCourseItems","receiveLogin","role","fetchUsers","REQUEST_LOGOUT","RECEIVE_LOGOUT","fetchLogout","sessionId","userId","RECEIVE_REFRESH_SESSION","REQUEST_COURSES","RECEIVE_COURSES","RECEIVE_COURSE_ITEMS","REQUEST_ADD_COURSE","RECEIVE_ADD_COURSE","REQUEST_ADD_COURSE_ITEM","RECEIVE_ADD_COURSE_ITEM","REQUEST_EDIT_COURSE_ITEM","RECEIVE_EDIT_COURSE_ITEM","REQUEST_ADD_SUB_COURSE_ITEM","RECEIVE_ADD_SUB_COURSE_ITEM","requestAddSubCourseItem","receiveAddSubCourseItem","fetchCourses","getState","sessionCookie","items","receiveCourses","courses","receiveCourseItems","fetchAddCourse","courseName","requestAddCourse","name","fetchAddCourseItem","courseItem","courseId","requestAddCourseItem","receiveAddCourseItem","fetchEditCourseItem","courseItemId","content","REQUEST_USERS","RECEIVE_USERS","REQUEST_COMPLETE_COURSE_ITEM","RECEIVE_COMPLETE_COURSE_ITEM","REQUEST_ASSIGN_COURSE_ITEM","RECEIVE_ASSIGN_COURSE_ITEM","REQUEST_CHANGE_USER_ROLE","RECEIVE_CHANGE_USER_ROLE","receiveChangeUserRole","users","receiveUsers","fetchCompleteCourseItem","grade","requestCompleteCourseItem","completedCourseItem","completedAt","receiveCompleteCourseItem","fetchAssignCourseItem","requestAssignCourseItem","assignedCourseItem","assignedAt","receiveAssignCourseItem","fetchChangeUserRole","requestChangeUserRole","ADD_PROBLEM","REMOVE_PROBLEM","EDIT_PROBLEM_QUESTION","ADD_PROBLEM_OPTION","REMOVE_PROBLEM_OPTION","RECEIVE_PROBLEMS","EDIT_PROBLEM_CORRECT_OPTION_INDEX","connect","entities","allIds","map","id","byId","fetchTestsClick","className","style","test","index","key","onClick","fetchLoginSubmit","fetchSignupSubmit","currentForm","src","alt","hash","onSubmit","e","preventDefault","target","value","trim","htmlFor","placeholder","autoFocus","href","Sidebar","this","props","expiresAt","to","children","newCourse","fetchAddCourseSubmit","minLength","maxLength","React","Component","ownProps","CKEditor","CKEDITOR","replace","config","mathJaxLib","allowedContent","removeFormatAttributes","editingContent","instances","editor1","setData","title","getData","isAddingSubCourseItem","fetchAddSubCourseItemClick","fetchEditCourseItemClick","fetchAddCourseItemClick","popupLinkText","popupDisplayText","insertHtml","problems","filter","substring","length","addProblemClick","problem","addProblem","editProblemQuestionBlur","problemId","option","question","editProblemQuestion","addProblemOptionBlur","addProblemOption","editProblemCorrectOptionIndexClick","correctOptionIndex","editProblemCorrectOptionIndex","fetchAddCourseItemSubmit","quiz","quizTitle","i","options","isQuizValid","color","defaultValue","onBlur","SRSImport","fileReader","handleFileChosen","file","FileReader","onload","lines","result","split","line","readContent","readAsText","files","accept","course","courseItems","sessionRole","padding","ui","setArchitectureLevelClick","textDecoration","onChange","isFetching","getCourseItemTitleById","find","combineReducers","action","j","_id","normalizeCourseItemsById","courseItemsAllIds","push","normalizeCourseItemsAllIds","getCourseItemIdsByType","getGradeColor","localStorage","getItem","parse","getCachedById","setItem","getCachedAllIds","user","currentUser","setSearchSubmit","fetchAssignCourseItemSubmit","fetchChangeUserRoleSubmit","compCourseItem","includes","sort","a","b","slice","searchResult","onMouseDown","listStyle","App","completeCourseItemSubmit","bind","history","pathname","url","params","textAlign","paddingLeft","parentCourseItemId","marginLeft","allCourseItems","path","RegExp","currentComponent","subCourseItems","orderedCourseItems","parentIndex","indexOf","splice","CourseItem","isEditing","answers","numWrongAnswerAttempts","problemIndex","fetchCompleteQuiz","position","left","top","setState","prevState","dangerouslySetInnerHTML","__html","isAnswerCorrect","parseInt","newAnswers","isOptionWrong","undefined","fetchCompleteQuizIfComplete","defaultProps","fetchAddSubCourseItem","createdAt","rootReducer","reload","removeItem","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","component","Login","exact","document","getElementById","URL","process","origin","addEventListener","status","get","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ddc3c559.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const apiUrl = 'http://localhost:8000/api/v1' // apiUrl changes depending on environment (development/production/test)\r\n\r\n// tests \r\nexport const REQUEST_TESTS = 'REQUEST_TESTS'\r\nexport const RECEIVE_TESTS = 'RECEIVE_TESTS'\r\n\r\nfunction requestTests() { return { type: REQUEST_TESTS } }\r\nfunction receiveTests(data) { return { type: RECEIVE_TESTS, tests: data, receivedAt: Date.now() } }\r\nexport function fetchTests(requiresAuthentication) /* exported functions beginning with fetch are async */\r\n{\r\n\treturn dispatch =>\r\n\t{\r\n\t\tdispatch(requestTests)\r\n\t\tfetch(`${apiUrl}/tests`).then( response => response.json() ).then( data => { dispatch( receiveTests(data) ) } )\r\n\t}\r\n}\r\n\r\n// ui \r\nexport const SET_ARCHITECTURE_LEVEL = 'SET_ARCHITECTURE_LEVEL'\r\nexport const SET_SEARCH = 'SET_SEARCH'\r\n\r\nexport function setArchitectureLevel(architectureLevel) { return { type: SET_ARCHITECTURE_LEVEL, architectureLevel } }\r\nexport function setSearch(search) { return { type: SET_SEARCH, search } }\r\n\r\n// session: signup\r\nexport const REQUEST_SIGNUP = 'REQUEST_SIGNUP'\r\nexport const RECEIVE_SIGNUP = 'RECEIVE_SIGNUP'\r\n\r\nfunction requestSignup() { return { type: REQUEST_SIGNUP } }\r\nfunction receiveSignup(data) { return { type: RECEIVE_SIGNUP, message: data.message, session: data.session } }\r\nexport function fetchSignup(email, password)\r\n{\r\n\treturn dispatch =>\r\n\t{\r\n\t\tdispatch(requestSignup)\r\n\t\tfetch(`${apiUrl}/signup`, { method: 'POST', headers: {'Content-Type': 'application/json'}, body: JSON.stringify({email, password}) }).then( response => response.json() ).then( data => dispatch( receiveSignup(data) ) )\r\n\t\t.catch( error => \r\n\t\t\t{\r\n\t\t\t\talert('Invalid email/password, email may already be in use') /*alert(error)*/\r\n\t\t\t\tconsole.error(error)\r\n\t\t\t} )\t\t\r\n\t}\r\n}\r\n\r\n// session: login\r\nexport const REQUEST_LOGIN = 'LOGIN'\r\nexport const RECEIVE_LOGIN ='RECEIVE_LOGIN'\r\n\r\nfunction requestLogin() {\treturn { type: REQUEST_LOGIN } }\r\nfunction receiveLogin(data) { return { type: RECEIVE_LOGIN, message: data.message, session: data.session, completedCourseItems: data.completedCourseItems, assignedCourseItems: data.assignedCourseItems } }\r\nexport function fetchLogin(email, password)\r\n{\r\n\treturn dispatch =>\r\n\t{\r\n\t\tdispatch( requestLogin() )\r\n\t\tfetch(`${apiUrl}/login`, { method: 'POST', headers: {'Content-Type': 'application/json'}, body: JSON.stringify({email, password}) }).then( response => response.json() )\r\n\t\t\t.then( data => \r\n\t\t\t\t{ \r\n\t\t\t\t\tdispatch( receiveLogin(data) ) \r\n\t\t\t\t\tif (data.session.role === 'teacher')\r\n\t\t\t\t\t\tdispatch( fetchUsers() ) // fetch users on login if user is 'teacher' \r\n\t\t\t\t} )\r\n\t\t.catch( error => alert('Invalid email/password') /*alert(error)*/ )\r\n\t}\r\n}\r\n\r\n// session: logout\r\nexport const REQUEST_LOGOUT = 'REQUEST_LOGOUT'\r\nexport const RECEIVE_LOGOUT = 'RECEIVE_LOGOUT'\r\n\r\nfunction requestLogout() { return { type: REQUEST_LOGOUT } }\r\nfunction receiveLogout() { return { type: RECEIVE_LOGOUT } }\r\nexport function fetchLogout(sessionId, userId)\r\n{\r\n\treturn dispatch =>\r\n\t{\r\n\t\tdispatch( requestLogout() )\r\n\t\tfetch(`${apiUrl}/logout`, {method: 'POST', headers: {'Content-Type': 'application/json'}, body: JSON.stringify({sessionId, userId}) } ).then( response => response.json() ).then( data => dispatch( receiveLogout() ) )\r\n\t\t.catch( error => alert(error) )\r\n\t}\r\n}\r\n\r\n// *tba: refresh_session functionality \r\nexport const RECEIVE_REFRESH_SESSION = 'RECEIVE_REFRESH_SESSION'\r\n/*function receiveRefreshSession()\r\n{\r\n\treturn { type: RECEIVE_REFRESH_SESSION }\r\n}*/\r\n\r\n// courses\r\nexport const REQUEST_COURSES = 'REQUEST_COURSES'\r\nexport const RECEIVE_COURSES = 'RECEIVE_COURSES'\r\nexport const RECEIVE_COURSE_ITEMS = 'RECEIVE_COURSE_ITEMS'\r\nexport const REQUEST_ADD_COURSE = 'REQUEST_ADD_COURSE'\r\nexport const RECEIVE_ADD_COURSE = 'RECEIVE_ADD_COURSE'\r\nexport const REQUEST_ADD_COURSE_ITEM = 'REQUEST_ADD_COURSE_ITEM'\r\nexport const RECEIVE_ADD_COURSE_ITEM = 'RECEIVE_COURSE_ITEM'\r\nexport const REQUEST_EDIT_COURSE_ITEM = 'REQUEST_EDIT_COURSE_ITEM'\r\nexport const RECEIVE_EDIT_COURSE_ITEM = 'RECEIVE_EDIT_COURSE_ITEM'\r\nexport const REQUEST_ADD_SUB_COURSE_ITEM = 'REQUEST_ADD_SUB_COURSE_ITEM'\r\nexport const RECEIVE_ADD_SUB_COURSE_ITEM = 'RECEIVE_ADD_SUB_COURSE_ITEM'\r\n\r\nfunction requestCourses() { return { type: REQUEST_COURSES } }\r\nfunction receiveCourses(data) { return { type: RECEIVE_COURSES, items: data } }\r\nfunction receiveCourseItems(data) {\treturn { type: RECEIVE_COURSE_ITEMS, courses: data } }\r\nfunction requestAddCourse(courseName) { return { type: REQUEST_ADD_COURSE, courseName } }\r\nfunction receiveAddCourse(courseName) { return { type: RECEIVE_ADD_COURSE } }\r\nfunction requestAddCourseItem(courseId) { return { type: REQUEST_ADD_COURSE_ITEM, courseId } }\r\nfunction receiveAddCourseItem(data) { return { type: RECEIVE_ADD_COURSE_ITEM, courseItem: data } }\r\nfunction requestEditCourseItem() { return { type: REQUEST_EDIT_COURSE_ITEM } }\r\nfunction receiveEditCourseItem() { return { type: RECEIVE_EDIT_COURSE_ITEM } }\r\nfunction requestAddSubCourseItem() { return { type: REQUEST_ADD_SUB_COURSE_ITEM } }\r\nfunction receiveAddSubCourseItem() { return { type: RECEIVE_ADD_SUB_COURSE_ITEM } }\r\nexport function fetchCourses()\r\n{\r\n\treturn (dispatch, getState) =>\r\n\t{\r\n\t\tlet session = getState().session\r\n\t\tlet sessionCookie = `sessionId=${session.sessionId}; userId=${session.userId};`\r\n\t\t\r\n\t\tdispatch( requestCourses() )\r\n\t\tfetch(`${apiUrl}/courses`, {headers: {'Session': sessionCookie}}).then( response => response.json() ).then( data => { dispatch( receiveCourses(data) ); dispatch( receiveCourseItems(data) ) } )\r\n\t\t\t.catch( error => alert('Error: Could not fetch courses. ' + error) )\t\r\n\t}\r\n}\r\nexport function fetchAddCourse(courseName)\r\n{\r\n\treturn (dispatch, getState) =>\r\n\t{\r\n\t\tlet session = getState().session\r\n\t\tlet sessionCookie = `sessionId=${session.sessionId}; userId=${session.userId};`\r\n\t\t\r\n\t\tdispatch( requestAddCourse(courseName) ) // provide course name for optimistic ui\r\n\t\tfetch(`${apiUrl}/courses`, {method: 'POST', headers: {'Content-Type': 'application/json', 'Session': sessionCookie }, body: JSON.stringify({name: courseName})}).then( response => response.json() )\r\n\t\t\t.then( data => { dispatch( receiveAddCourse(courseName) ); dispatch( fetchCourses() ) } )\r\n\t\t\t.catch( error => alert(`Error: Could not add course '${courseName}'. Are you logged in with a 'teacher' user? ${error}`) )\t\t\r\n\t}\r\n}\r\nexport function fetchAddCourseItem(courseItem, courseId)\r\n{\r\n\treturn (dispatch, getState) =>\r\n\t{\r\n\t\tlet session = getState().session\r\n\t\tlet sessionCookie = `sessionId=${session.sessionId}; userId=${session.userId};`\r\n\t\t\r\n\t\tdispatch( requestAddCourseItem(courseId) )\r\n\t\tfetch(`${apiUrl}/courses/${courseId}`, {method: 'POST', headers: {'Content-Type': 'application/json', 'Session': sessionCookie}, body: JSON.stringify(courseItem) })\r\n\t\t\t.then( response => response.json() ).then( data => { dispatch( receiveAddCourseItem(data) ); dispatch( fetchCourses() ) } ) // fetch courses from backend as db may perform some operations on courseItem content to make it safe \r\n\t\t\t.catch( error => alert(`Error: Could not add item to course with id '${courseId}'. Are you logged in with a 'teacher' user? ${error}`) )\t\t\t\r\n\t}\r\n}\r\nexport function fetchEditCourseItem(courseId, courseItemId, type, content)\r\n{\r\n\treturn (dispatch, getState) =>\r\n\t{\r\n\t\tlet session = getState().session\r\n\t\tlet sessionCookie = `sessionId=${session.sessionId}; userId=${session.userId};`\r\n\r\n\t\tdispatch(requestEditCourseItem(courseId, courseItemId))\r\n\t\tfetch(`${apiUrl}/courses/${courseId}`, {method: 'PATCH', headers: {'Content-Type': 'application/json', 'Session': sessionCookie}, body: JSON.stringify({courseItemId, type, content}) })\r\n\t\t\t.then( response => response.json() ).then( data => { dispatch( receiveEditCourseItem() ); dispatch(fetchCourses()) } ) // fetch courses from backend after successful edit\r\n\t\t\t.catch( error => alert(`Error: Could not edit course item with id '${courseItemId}'. Are you logged in with a 'teacher' user?`))\r\n\t}\r\n}\r\nexport function fetchAddSubCourseItem(courseId, parentCourseItemId, type, title, content)\r\n{\r\n\treturn (dispatch, getState) =>\r\n\t{\r\n\t\tlet session = getState().session\r\n\t\tlet sessionCookie = `sessionId=${session.sessionId}; userId=${session.userId};`\r\n\r\n\t\tdispatch( requestAddSubCourseItem )\r\n\t\tfetch(`${apiUrl}/courses/${courseId}/${parentCourseItemId}`, { method: 'POST', headers: {'Content-Type': 'application/json', 'Session': sessionCookie}, body: JSON.stringify({type, title, content}) } )\r\n\t\t\t.then( response => response.json() ).then( data => { dispatch(receiveAddSubCourseItem); dispatch( fetchCourses() ) } ) // fetch courses from backend after successfully adding sub course item\r\n\t\t\t.catch( error => alert(`Error: Could add sub course item to course item with id '${parentCourseItemId}'. Are you logged in with a 'teacher' user?`) )\r\n\t}\r\n}\r\n\r\n// users\r\nexport const REQUEST_USERS = 'REQUEST_USERS'\r\nexport const RECEIVE_USERS = 'RECEIVE_USERS'\r\nexport const REQUEST_COMPLETE_COURSE_ITEM = 'REQUEST_COMPLETE_COURSE_ITEM'\r\nexport const RECEIVE_COMPLETE_COURSE_ITEM = 'RECEIVE_COMPLETE_COURSE_ITEM'\r\nexport const REQUEST_ASSIGN_COURSE_ITEM = 'REQUEST_ASSIGN_COURSE_ITEM'\r\nexport const RECEIVE_ASSIGN_COURSE_ITEM = 'RECEIVE_ASSIGN_COURSE_ITEM'\r\nexport const REQUEST_CHANGE_USER_ROLE = 'REQUEST_CHANGE_USER_ROLE' // not used by reducers since dispatch( fetchUsers() ) is called in fetchChangeUserRole\r\nexport const RECEIVE_CHANGE_USER_ROLE = 'RECEIVE_CHANGE_USER_ROLE' // not used by reducers since dispatch( fetchUsers() ) is called in fetchChangeUserRole\r\n\r\nfunction requestUsers() { return { type: REQUEST_USERS } }\r\nfunction receiveUsers(data) { return { type: RECEIVE_USERS, users: data} }\r\nfunction requestCompleteCourseItem(courseItemId) { return { type: REQUEST_COMPLETE_COURSE_ITEM, courseItemId} }\r\nfunction receiveCompleteCourseItem(data, courseItemId, userId, grade) { return { type: RECEIVE_COMPLETE_COURSE_ITEM, userId, completedCourseItem: { courseItemId, completedAt: data.completedAt, grade } } }\r\nfunction requestAssignCourseItem(courseItemId) { return { type: REQUEST_ASSIGN_COURSE_ITEM, courseItemId } }\r\nfunction receiveAssignCourseItem(data, courseItemId, userId) { return { type: RECEIVE_ASSIGN_COURSE_ITEM, userId, assignedCourseItem: { courseItemId, assignedAt: data.assignedAt } } }\r\nfunction requestChangeUserRole(userId, role) { return { type: REQUEST_CHANGE_USER_ROLE, userId, role } }\r\nfunction receiveChangeUserRole(userId, role) { return { type: RECEIVE_CHANGE_USER_ROLE, userId, role } }\r\n\r\nexport function fetchUsers()\r\n{\r\n\treturn (dispatch, getState) =>\r\n\t{\r\n\t\tlet session = getState().session\r\n\t\tlet sessionCookie = `sessionId=${session.sessionId}; userId=${session.userId};`\r\n\r\n\t\tdispatch( requestUsers() )\r\n\t\tfetch(`${apiUrl}/users`, {headers: {'Session': sessionCookie} }).then( response => response.json() ).then( data => dispatch( receiveUsers(data) ) )\r\n\t\t\t.catch( error => alert(`Error: Could not fetch users. ${error}`) )\r\n\t}\r\n}\r\nexport function fetchCompleteCourseItem(courseItemId, grade)\r\n{\r\n\treturn (dispatch, getState) =>\r\n\t{\r\n\t\tlet session = getState().session\r\n\t\tlet sessionCookie = `sessionId=${session.sessionId}; userId=${session.userId};`\r\n\r\n\t\tdispatch( requestCompleteCourseItem(courseItemId) )\r\n\t\tfetch(`${apiUrl}/users/completedCourseItems`, {method: 'POST', headers: {'Content-Type': 'application/json', 'Session': sessionCookie}, body: JSON.stringify({courseItemId, grade}) })\r\n\t\t\t.then( response => response.json() ).then( data => dispatch( receiveCompleteCourseItem(data, courseItemId, session.userId, grade) ) )\r\n\t\t\t.catch( error => alert(`Error: Could not complete course item with id '${courseItemId}. ${error}'`) )\r\n\t}\r\n}\r\nexport function fetchAssignCourseItem(courseItemId, userId)\r\n{\r\n\treturn (dispatch, getState) =>\r\n\t{\r\n\t\tlet session = getState().session\r\n\t\tlet sessionCookie = `sessionId=${session.sessionId}; userId=${session.userId};`\r\n\r\n\t\tdispatch( requestAssignCourseItem(courseItemId) )\r\n\t\tfetch(`${apiUrl}/users/assignedCourseItems`, {method: 'POST', headers: {'Content-Type': 'application/json', 'Session': sessionCookie}, body: JSON.stringify({courseItemId, userId}) })\r\n\t\t\t.then( response => response.json() ).then( data => dispatch( receiveAssignCourseItem(data, courseItemId, userId) ) )\r\n\t\t\t.catch( error => alert(`Error: Could not complete course item with id '${courseItemId}. ${error}'`) )\r\n\t}\r\n}\r\nexport function fetchChangeUserRole(userId, role)\r\n{\r\n\treturn (dispatch, getState) =>\r\n\t{\r\n\t\tlet session = getState().session\r\n\t\tlet sessionCookie = `sessionId=${session.sessionId}; userId=${session.userId};`\r\n\r\n\t\tdispatch( requestChangeUserRole(userId, role) )\r\n\t\tfetch(`${apiUrl}/users/role`, {method: 'PATCH', headers: {'Content-Type': 'application/json', 'Session': sessionCookie}, body: JSON.stringify({userId, role})} )\r\n\t\t\t.then( response => response.json() ).then( data => { dispatch(receiveChangeUserRole); dispatch(fetchUsers() ) } )\r\n\t\t\t.catch( error => alert(`Error: Could not change user role to '${role}' for user with id '${userId}. ${error}'`) )\r\n\r\n\t}\r\n}\r\n\r\n// problems\r\nexport const ADD_PROBLEM = 'ADD_PROBLEM'\r\nexport const REMOVE_PROBLEM = 'REMOVE_PROBLEM'\r\nexport const EDIT_PROBLEM_QUESTION = 'EDIT_PROBLEM_QUESTION'\r\nexport const ADD_PROBLEM_OPTION = 'ADD_PROBLEM_OPTION'\r\nexport const REMOVE_PROBLEM_OPTION = 'REMOVE_PROBLEM_OPTION'\r\nexport const RECEIVE_PROBLEMS = 'RECEIVE_PROBLEMS'\r\nexport const EDIT_PROBLEM_CORRECT_OPTION_INDEX = 'EDIT_PROBLEM_CORRECT_OPTION_INDEX'\r\n\r\nexport function addProblem(problem) { return { type: ADD_PROBLEM, problem } }\r\nexport function removeProblem(problemId) { return { type: REMOVE_PROBLEM, problemId } }\r\nexport function editProblemQuestion(problemId, question) { return { type: EDIT_PROBLEM_QUESTION, problemId, question} }\r\nexport function addProblemOption(problemId, option) { return { type: ADD_PROBLEM_OPTION, problemId, option } }\r\nexport function removeProblemOption(problemId, option) { return { type: REMOVE_PROBLEM_OPTION, problemId, option } }\r\nexport function editProblemCorrectOptionIndex(problemId, correctOptionIndex) { return { type: EDIT_PROBLEM_CORRECT_OPTION_INDEX, problemId, correctOptionIndex } }","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchTests } from '../../actions.js'\r\n\r\nlet Test = ({tests, fetchTestsClick}) =>\r\n(\r\n\t<div className='Test'>\r\n\t\t<h3>Test Component/Container</h3>\r\n\r\n\t\t<ul style={ {'listStyle': 'none'} }>\r\n\t\t\t{ tests.map( (test, index) => \r\n\t\t\t\t(\r\n\t\t\t\t\t<li key={index}> { test.message } </li>\r\n\t\t\t\t)) }\r\n\t\t</ul>\r\n\r\n\t\t<button onClick={ () => fetchTestsClick() }> Fetch Tests </button>\r\n\t</div>\r\n) \r\n\r\nconst mapStateToProps = state => ({\r\n\ttests: state.entities.tests.allIds.map( id => state.entities.tests.byId[id] )\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tfetchTestsClick: () => dispatch( fetchTests() )\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Test) \r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchLogin, fetchSignup } from '../../actions.js'\r\nimport './Login.css'\r\n\r\nlet Login = ({fetchLoginSubmit, fetchSignupSubmit, currentForm, location}) =>\r\n(\r\n\t<div className='Login'>\r\n\t\t<img className=\"mb-4 center-block\" src=\"/images/icw-logo-200x100.png\" alt=\"I/T CS Workshop\"/>\r\n\t\t\r\n\t  { ( !location || !location.hash || location.hash !== '#signup' ) &&\r\n\t\t  <form className='form-signin text-center' onSubmit={ e =>\r\n\t\t  {\r\n\t\t    e.preventDefault()\r\n\r\n\t\t    let email = e.target.email.value.trim()\r\n\t\t    let password = e.target.password.value.trim()\r\n\r\n\t\t    if ( email && password )\r\n\t\t    {\r\n\t\t      fetchLoginSubmit(email, password)\r\n\r\n\t\t      // reset login form after successful submission\r\n\t\t      e.target.email.value = ''\r\n\t\t      e.target.password.value = ''\r\n\t\t    }\r\n\t\t    else\r\n\t\t      alert('A valid email & password are required')\r\n\t\t  } }>\r\n\t\t  \t<h3 className=\"h3 mb-3 text-center font-weight-normal\">Please Sign In</h3>\r\n\t\t\t\t<label htmlFor=\"inputEmail\" className=\"sr-only\">Email address</label>\r\n\t\t    <input name='email' type='text' id=\"inputEmail\" className=\"form-control\" placeholder=\"Email address\" autoFocus />\r\n\t\t\t\t<label htmlFor=\"inputPassword\" className=\"sr-only\">Password</label>\r\n\t\t    <input name='password' type='password' id=\"inputPassword\" className=\"form-control\" placeholder=\"Password\"/>\r\n\t\t\t\t<div className=\"checkbox mb-3\">\r\n\t        <label htmlFor=\"remember-me\">\r\n\t          <input type=\"checkbox\" value=\"remember-me\" id=\"remember-me\" /> Remember me\r\n\t        </label>\r\n\t      </div>\r\n\t\t    <button className=\"mb-3 btn btn-lg btn-success btn-block\" type='submit'>Sign in</button>\r\n\t\t\t\tNew to ICW? <a href='#signup' className=\"font-weight-normal\">Register now.</a>\r\n\t\t  </form>\r\n\t\t }\r\n\r\n\t\t<hr></hr>\r\n\t\t{ (location && location.hash && location.hash === '#signup') &&\r\n\t    <form className='form-signin text-center' onSubmit={ e =>\r\n\t    {\r\n\t      e.preventDefault()\r\n\t      let email = e.target.email.value.trim()\r\n\t      let password = e.target.password.value.trim()\r\n\r\n\t      if ( email && password )\r\n\t      {\r\n\t        fetchSignupSubmit(email, password)\r\n\t        // reset signup form after successful submission\r\n\t        e.target.email.value = ''\r\n\t        e.target.password.value = ''\r\n\t      }\r\n\t      else\r\n\t        alert('A valid email & password are required')\r\n\t    } }>\r\n\t\t    <h3 className=\"h3 mb-3 text-center font-weight-normal\">Sign up</h3>\r\n\t\t\t\t<label htmlFor=\"inputEmail\" className=\"sr-only\">Email address</label>\r\n\t\t\t\t<input name='email' type='text' id=\"inputEmail\" className=\"form-control\" placeholder=\"Email address\" autoFocus />\r\n\t\t\t\t<label htmlFor=\"inputPassword\" className=\"sr-only\">Password</label>\r\n\t\t\t\t<input name='password' type='password' id=\"inputPassword\" className=\"form-control\" placeholder=\"Password\"/>\r\n\t      <button className=\"mb-3 btn btn-lg btn-success btn-block\" type='submit'>Sign Up</button>\r\n\t      Already have an account? <a href='' className=\"font-weight-normal\">Login.</a>\r\n\t    </form>\r\n\t  }\r\n\t</div>\r\n)\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tfetchLoginSubmit: (email, password) => dispatch( fetchLogin(email, password) ),\r\n\tfetchSignupSubmit: (email, password) => dispatch( fetchSignup(email, password) )\r\n})\r\n\r\nexport default connect( () => ({}), mapDispatchToProps)(Login)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { fetchCourses, fetchAddCourse } from '../../actions.js'\r\nimport './Sidebar.css'\r\n\r\nclass Sidebar extends React.Component \r\n{ \r\n\t//({courses, courseName}) \r\n\tcomponentDidMount()\r\n\t{\r\n\t\tif ( this.props.session.expiresAt && this.props.session.expiresAt > Date.now() ) // fetch courses when component mounts if session is not expired\r\n\t\t\tthis.props.fetchCourses()\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\treturn (\r\n\t\t\t<div className='Sidebar'>\r\n\r\n\t\t\t\t<NavLink to='/'>\r\n\t\t\t\t\t<img src='/images/icw-logo-128x90.png' alt='ICW logo'/>\r\n\t\t\t\t</NavLink>\r\n\t\t\t\t\r\n\t\t\t\t<h4>{!this.props.courseId || this.props.courseId === '' ? 'Projects' : ''}</h4>\r\n\r\n\t\t\t\t{this.props.children}\r\n\t\t\t\t\r\n\t\t\t\t{ this.props.session.role === 'teacher' && // do not allow students to create courses\r\n\t\t\t\t\t<form onSubmit={ e =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\te.preventDefault()\r\n\r\n\t\t\t\t\t\tlet courseName = e.target.newCourse.value\r\n\t\t\t\t\t\tthis.props.fetchAddCourseSubmit( courseName )\r\n\t\t\t\t\t\te.target.newCourse.value = '' // reset course input after submit\r\n\t\t\t\t\t}  }>\r\n\t\t\t\t\t\t<input name='newCourse' type='text' placeholder='New Project...' minLength='4' maxLength='24' />\r\n\t\t\t\t\t\t<button type='submit'>Add</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t}\t\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n\tsession: state.session,\r\n\tcourseId: ownProps.courseId\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tfetchAddCourseSubmit: courseName => dispatch( fetchAddCourse(courseName) ),\r\n\tfetchCourses: () => dispatch ( fetchCourses() )\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar)","import React from 'react'\r\n\r\nexport default class CKEditor extends React.Component {\r\n\r\n\tcomponentDidMount() \r\n\t{ \r\n\t\tif ( window && window.CKEDITOR )\r\n\t\t{\r\n\t\t\twindow.CKEDITOR.replace( 'editor1' ) \r\n\t\t\twindow.CKEDITOR.config.mathJaxLib = '//cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS_HTML'\r\n\t\t\twindow.CKEDITOR.config.allowedContent = true // allows insertHtml() to add html attributes (including onclick=) for custom popup\r\n\t\t\twindow.CKEDITOR.config.removeFormatAttributes = ''\r\n\r\n\t\t\tif ( this.props.editingContent ) // if editing lesson pre-fill ckeditor with html from lesson's content\r\n\t\t\t\twindow.CKEDITOR.instances.editor1.setData( this.props.editingContent )\r\n\t\t}\r\n\t} // instantiate advanced html editor, load page if editing a page that already exists \r\n\r\n\trender()\r\n\t{\r\n\t\treturn (\r\n\t\t\t<div className='CKEditor'>\r\n\t\t\t\t<textarea name='editor1' id='editor1'></textarea>\r\n\t\t\t\t<form onSubmit={ (e) => // create lesson with html from CKEditor \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\te.preventDefault()\r\n\t\t\t\t\t\tlet title = e.target.title.value\r\n\t\t\t\t\t\tlet content = window.CKEDITOR.instances.editor1.getData()\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif ( !this.props.editingContent && !this.props.isAddingSubCourseItem ) // create new course item if not editing an already existing course item\r\n\t\t\t\t\t\t\tthis.props.fetchAddCourseItemClick({type: 'lesson', title, content}) // (inherited prop from Course)\r\n\t\t\t\t\t\telse if ( !this.props.isAddingSubCourseItem )\r\n\t\t\t\t\t\t\tthis.props.fetchEditCourseItemClick(this.props.type, content) // edit existing course item\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tthis.props.fetchAddSubCourseItemClick(this.props.type, title, content)// add sub course item to existing course item\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\twindow.CKEDITOR.instances.editor1.setData('') // reset advanced html editor\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif ( e.target.title )\r\n\t\t\t\t\t\t\te.target.title.value = '' // reset lesson title\r\n\t\t\t\t\t} }>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t\r\n\t\t\t\t\t{ !this.props.editingContent && // do not render lesson title input if editing already existing course item\r\n\t\t\t\t\t\t<input name='title' minLength='1' placeholder='Lesson Title...' />\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<button type='submit'>Submit Lesson</button>\r\n\t\t\t\t\t</form>\r\n\r\n\t\t\t\t\t<form onSubmit={ (e) => // create custom html element that uses alert() to display user-submitted value \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\te.preventDefault()\r\n\t\t\t\t\t\t\tlet popupLinkText = e.target.popupLinkText.value //\r\n\t\t\t\t\t\t\tlet popupDisplayText = e.target.popupDisplayText.value\r\n\r\n\t\t\t\t\t\t\twindow.CKEDITOR.instances.editor1.insertHtml( `<p style='text-decoration:underline; cursor: pointer;' class='customPopup' onclick=\"alert('${popupDisplayText}')\">${popupLinkText}</p>` )\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// reset popup form\r\n\t\t\t\t\t\t\te.target.popupLinkText.value = ''\r\n\t\t\t\t\t\t\te.target.popupDisplayText.value = ''\r\n\t\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t\t}>\r\n\t\t\t\t\t\t<input name='popupLinkText' type='text' placeholder='Text for popup link...' />\r\n\t\t\t\t\t\t<input name='popupDisplayText' type='text' placeholder='Text displayed in the popup...' />\r\n\t\t\t\t\t\t<button type='submit'>Add popup</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { \r\n\taddProblem, \r\n\t// removeProblem, // not yet implemented\r\n\teditProblemQuestion, \r\n\taddProblemOption, \r\n\t// removeProblemOption, // not yet implemented\r\n\teditProblemCorrectOptionIndex } from '../../actions'\r\nimport './QuizEditor.css'\r\n\r\nlet QuizEditor = ({\r\n\t\tproblems, \r\n\t\tcourseItemId,\r\n\t\taddProblemClick, \r\n\t\teditProblemQuestionBlur, \r\n\t\taddProblemOptionBlur, \r\n\t\teditProblemCorrectOptionIndexClick,\r\n\t\tfetchAddCourseItemSubmit\r\n\t}) =>\r\n(\r\n\t<form onSubmit={ e => \r\n\t\t{\r\n\t\t\te.preventDefault()\r\n\r\n\t\t\tlet quiz = {\r\n\t\t\t\ttitle: e.target.quizTitle.value,\r\n\t\t\t\ttype: 'quiz',\r\n\t\t\t\tcontent: 'This is a quiz.',\r\n\t\t\t\tproblems\r\n\t\t\t}\r\n\r\n\t\t\tif ( isQuizValid(quiz) )\r\n\t\t\t{\r\n\t\t\t\tfetchAddCourseItemSubmit(quiz)\r\n\t\t\t\te.target.quizTitle.value = '' // reset quiz title\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\talert(`Invalid quiz. A quiz requires a title and at least one problem. Each problem require a valid question, at least 2 options, and a correct answer.`)\r\n\t\t}\r\n\t}>\r\n\t\t<h3>QuizEditor</h3>\r\n\t\t\t<hr />\r\n\t\t\t{ problems.map( (problem, index) => (\r\n\t\t\t\t<fieldset className='problem' key={problem.id}>\r\n\t\t\t\t\t<legend>Problem {index + 1}</legend>\r\n\r\n\t\t\t\t\t<h5>{problem.question}</h5>\r\n\t\t\t\t\t<ul className='problemOptions'>\r\n\t\t\t\t\t\t{ problem.options.map( (option, index) => (\r\n\t\t\t\t\t\t\t<li key={index} style={ {color: problem.correctOptionIndex === index ? 'green' : 'red'} } onClick={ () => editProblemCorrectOptionIndexClick(problem.id, index) }>{option}</li>\r\n\t\t\t\t\t\t\t) )\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</ul>\r\n\r\n\t\t\t\t\t<input type='text' placeholder='Question...' defaultValue={problem.question} onBlur={ e => editProblemQuestionBlur(problem.id, e.target.value) } />\r\n\t\t\t\t\t\r\n\t\t\t\t\t<input key={index} type='text' placeholder='Option...' defaultValue={problem.options[problem.options.length - 1]} onBlur={ e => \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\taddProblemOptionBlur(problem.id, e.target.value) \r\n\t\t\t\t\t\t\te.target.value = ''\r\n\t\t\t\t\t\t}\t\r\n\t\t\t\t\t} />\r\n\t\t\t\t\t\r\n\t\t\t\t</fieldset>\r\n\t\t\t\t) )\r\n\t\t\t}\r\n\r\n\t\t\t<button type='button' onClick={ () => addProblemClick({id: `${problems.length}${courseItemId}`, question: '', options: [], correctOptionIndex: null}) }>\r\n\t\t\t\tAdd problem\r\n\t\t\t</button>\r\n\r\n\t\t\t{ problems.length > 0 &&\r\n\t\t\t\t<section>\r\n\t\t\t\t\t<input name='quizTitle' type='text' placeholder='Quiz Title...' />\r\n\t\t\t\t\t<button type='submit'>Submit Quiz</button>\r\n\t\t\t\t</section>\r\n\t\t\t}\r\n\t</form>\r\n)\r\n\r\n// verify quiz has required fields and all problems are valid before submitting\r\nfunction isQuizValid(quiz)\r\n{\r\n\tconsole.log('quiz:', quiz)\r\n\tif ( quiz.title.length < 1 ) // require non-empty string quiz title\r\n\t\treturn false\r\n\tfor ( let i in quiz.problems ) // verify each problem is valid: a non-empty string question, at least 2 options, a non-null correctOptionIndex (in valid range of options)\r\n\t{\r\n\t\tif ( quiz.problems[i].question.length < 1 || quiz.problems[i].options.length < 2 || (!quiz.problems[i].correctOptionIndex && quiz.problems[i].correctOptionIndex !== 0 ) || quiz.problems[i].correctOptionIndex >= quiz.problems[i].options.length )\r\n\t\t\treturn false\r\n\t}\r\n\treturn true // all problems were valid return true\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n\tproblems: state.entities.problems.allIds.filter( id => id.substring(1, id.length) === ownProps.courseItemId ).map( id => state.entities.problems.byId[id] ),\r\n\tcourseItemId: ownProps.courseItemId\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n\taddProblemClick: problem => dispatch( addProblem(problem) ),\r\n\teditProblemQuestionBlur: (problemId, option) => dispatch( editProblemQuestion(problemId, option) ),\r\n\taddProblemOptionBlur: (problemId, option) => { if (option !== '') dispatch( addProblemOption(problemId, option) ) },\r\n\teditProblemCorrectOptionIndexClick: (problemId, correctOptionIndex) => dispatch( editProblemCorrectOptionIndex(problemId, correctOptionIndex) ),\r\n\tfetchAddCourseItemSubmit: quiz => ownProps.fetchAddCourseItemClick(quiz)\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizEditor)","import React from 'react'\r\n\r\nlet SRSImport = () => {\r\n\r\n\tlet fileReader\r\n\r\n\tfunction handleFileChosen(file){\r\n\t\tconsole.log(\"Inside handleFileChosen\")\r\n\t\tfileReader = new FileReader();\r\n\t\tfileReader.onload = readContent()\r\n\t\tfileReader.readAsText(file)\r\n\t}\r\n\r\n\tfunction readContent()\r\n\t{\r\n\t\tconsole.log(\"Inside readContent\")\r\n\t\tconst content = fileReader.result\r\n\t\tvar lines = content.split(/[\\r\\n\\t]+/)\r\n\t\tconsole.log(\"Number of lines in file: %d\", lines.length);\r\n\t\tfor(var line of lines)\r\n\t\t\tconsole.log(\"New Line: %s\", line)\r\n\t\t// if (lines.length < 5)\r\n\t}\r\n\r\n\treturn <div className='SRSImport'>\r\n\t\t<hr />\r\n\t\t<h3>Import From SRS</h3>\r\n\t\t<form onSubmit={e => { \r\n\t\t\tconsole.log(\"Inside onSubmit\")\r\n\t\t\thandleFileChosen(e.target.files[0])\r\n\t\t}}>\r\n\t\t\t<input type='file'\r\n\t\t\t\tname='fileInput'\r\n\t\t\t\taccept='.srsnote'\r\n\t\t\t/>\r\n\t\t\t<input type=\"submit\"/>\r\n\t\t</form>\r\n\t\t<hr />\r\n\t</div>\r\n}\r\n\r\nexport default SRSImport","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchAddCourseItem } from '../../actions.js'\r\nimport CKEditor from '../CKEditor/CKEditor.js'\r\nimport QuizEditor from '../QuizEditor/QuizEditor'\r\nimport SRSImport from '../SRSImport/SRSImport'\r\n\r\nlet Course = ({\r\n\tcourseId, \r\n\tcourseItems, \r\n\tfetchAddCourseItemClick, \r\n\tcourse = {name: 'Course Name'}, // needed to render on refresh \r\n\tsessionRole,\r\n\tchildren\r\n}) =>\r\n(\r\n\t<div className='Course' style={ {padding: '15px'} }>\r\n\t\t<h2> {course.name} </h2>\r\n\r\n\t\t{ children } {/* list course items (same children passed to Sidebar by App component) */}\r\n\r\n\t\t{ sessionRole === 'teacher' && // only display CKEditor if user has role 'teacher'\r\n    \t<section className='courseItemEditors'>\r\n    \t\t<CKEditor fetchAddCourseItemClick={ fetchAddCourseItemClick } />\r\n    \t\t<SRSImport fetchAddCourseItemClick={ fetchAddCourseItemClick } /> \r\n    \t\t<QuizEditor fetchAddCourseItemClick={ fetchAddCourseItemClick } courseItemId='' />\r\n    \t</section>\r\n  \t}\r\n\t</div>\r\n)\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n\tcourseId: ownProps.courseId,\r\n\tcourse: state.entities.courses.byId[ownProps.courseId],\r\n\tcourseItems: state.entities.courseItems.allIds.map( id => state.entities.courseItems.byId[id] ).filter( courseItem => courseItem.courseId === ownProps.courseId ), // grab course items for current course\r\n\tsessionRole: state.session.role || false,\r\n\tchildren: ownProps.children\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n\tfetchAddCourseItemClick: (courseItem) => dispatch( fetchAddCourseItem(courseItem, ownProps.courseId) )\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Course)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './Navbar.css'\r\nimport { setArchitectureLevel } from '../../actions'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Navbar = ({architectureLevel, setArchitectureLevelClick}) =>\r\n(\r\n\t<nav className='Navbar'>\r\n\t\t<ul className='architectureLevels'>\r\n\t\t\t<li \r\n\t\t\t\tclassName={ architectureLevel === 'WorkShop' ? 'activeArchitectureLevel' : 'inactiveArchitectureLevel' }\r\n\t\t\t\tonClick={ () => setArchitectureLevelClick('WorkShop') }> \r\n\t\t\t\t<Link style={ {textDecoration: 'none'} } to='/'>WorkShop</Link>\r\n\t\t\t\t</li>\r\n\t\t\t<li className={ architectureLevel === 'WorkBench' ? 'activeArchitectureLevel' : 'blueHover' }\r\n\t\t\t\tonClick={ () => setArchitectureLevelClick('WorkBench') }> WorkBench </li>\r\n\t\t\t<li className={ architectureLevel === 'TestBench' ? 'activeArchitectureLevel' : 'inactiveArchitectureLevel' }\r\n\t\t\t\tonClick={ () => setArchitectureLevelClick('TestBench') }> \r\n\t\t\t\t<Link style={ {textDecoration: 'none'} } to='/'>TestBench</Link>\r\n\t\t\t\t</li>\r\n\t\t</ul>\r\n\t\t<select defaultValue='Mentor' onChange={e => console.log('tba popup mentor courseItem', e.target.value)}>\r\n\t\t\t<option>Mentor</option>\r\n\t\t\t<option>Option 1</option>\r\n\t\t\t<option>Option 2</option>\r\n\t\t\t<option>Option 3</option>\r\n\t\t</select>\r\n\t</nav>\r\n)\r\n\r\nconst mapStateToProps = state => ({\r\n\tarchitectureLevel: state.ui.architectureLevel\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tsetArchitectureLevelClick: architectureLevel => dispatch( setArchitectureLevel(architectureLevel) )\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar)","import { combineReducers } from 'redux'\r\nimport { REQUEST_COURSES, RECEIVE_COURSES, REQUEST_ADD_COURSE, RECEIVE_ADD_COURSE, RECEIVE_COURSE_ITEMS } from '../actions'\r\n\r\nfunction isFetching(state = false, action) // course items & courses are fetched in same http request\r\n{\r\n\tswitch (action.type)\r\n\t{\r\n\t\tcase REQUEST_COURSES:\r\n\t\tcase REQUEST_ADD_COURSE:\r\n\t\t\treturn true\r\n\t\tcase RECEIVE_COURSES:\r\n\t\tcase RECEIVE_ADD_COURSE:\r\n\t\t\treturn false\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nfunction coursesById(state = { \r\n\t\t'0ab': { _id: '0ab', name: 'Offline Course 1'}, \r\n\t\t'1ab': {_id: '1ab', name: 'Offline Course 2'}, \r\n\t\t'2ab': {_id: '2ab', name: 'Offline Course 3'} \r\n\t}, action) \r\n{\r\n\tswitch (action.type)\r\n\t{\r\n\t\tcase RECEIVE_COURSES:\t\r\n\t\t\tlet byId = {}\r\n\t\t\tfor ( let i in action.items ) // action.items = courses from backend request\r\n\t\t\t\tbyId[action.items[i]._id] = {_id: action.items[i]._id, name: action.items[i].name}\r\n\t\t\treturn byId// { ...action.items.map( course => { course._id: { _id: course._id, name: course.name } } ) } // { items: action.items }\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nfunction coursesAllIds( state = ['0ab', '1ab', '2ab'], action )\r\n{\r\n\tswitch (action.type)\r\n\t{\r\n\t\tcase RECEIVE_COURSES:\r\n\t\t\treturn action.items.map( course => course._id )\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n// note: course items are returned in same fetch that gets courses from backend\r\nfunction normalizeCourseItemsById(courses) // database store prefers denormalized data, redux prefers normalized data structure (haven't verified it sufficently normalizes data)\r\n{\r\n\tlet courseItems = {}\r\n\tfor ( let i in courses )\r\n\t\tfor ( let j in courses[i].items )\r\n\t\t\tcourseItems[courses[i].items[j].id] = {courseId: courses[i]._id, ...courses[i].items[j]}\r\n\treturn courseItems\r\n}\r\nfunction normalizeCourseItemsAllIds(courses)\r\n{\r\n\tlet courseItemsAllIds = []\r\n\tfor ( let i in courses)\r\n\t\tfor ( let j in courses[i].items )\r\n\t\t\tcourseItemsAllIds.push(courses[i].items[j].id)\r\n\treturn courseItemsAllIds\r\n}\r\n\r\nfunction courseItemsById(state = {}, action) \r\n{\r\n\tswitch (action.type)\r\n\t{\r\n\t\tcase RECEIVE_COURSE_ITEMS:\r\n\t\t\treturn normalizeCourseItemsById(action.courses)\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nfunction courseItemsAllIds(state = [], action)\r\n{\r\n\tswitch (action.type)\r\n\t{\r\n\t\tcase RECEIVE_COURSE_ITEMS:\r\n\t\t\treturn normalizeCourseItemsAllIds(action.courses)\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n// selectors\r\nexport function getCourseItemTitleById(courseItems, courseItemId)\r\n{\r\n  let courseItem = courseItems.find( courseItem => courseItem.id === courseItemId )\r\n  return courseItem ? courseItem.title : ''\r\n}\r\nexport function getCourseIdFromCourseItemId(courseItemId, courses) \r\n{\r\n\tconsole.log('courseItemId:', courseItemId)\r\n\tconsole.log('courses:', courses)\r\n\tlet course = courses.allIds.map( id => courses.byId[id] ).find( course => { console.log('courseFind:', course._id); return course._id === courseItemId } )\r\n\tconsole.log('course:', course)\r\n\tif ( course )\r\n\t\treturn course._id\r\n}\r\n\r\nexport const courseItems = combineReducers({ // course items reducer\r\n\tisFetching,\r\n\tbyId: courseItemsById,\r\n\tallIds: courseItemsAllIds\r\n}) \r\nexport const courses = combineReducers({ // courses reducer\r\n\tisFetching,\r\n\tbyId: coursesById, \r\n\tallIds: coursesAllIds\r\n})\r\n\r\n// course items reducer","import { combineReducers } from 'redux'\r\nimport { RECEIVE_LOGIN, REQUEST_USERS, RECEIVE_USERS, RECEIVE_COMPLETE_COURSE_ITEM, RECEIVE_ASSIGN_COURSE_ITEM } from '../actions'\r\n\r\nfunction isFetching(state = false, action)\r\n{\r\n\tswitch (action.type)\r\n\t{\r\n\t\tcase REQUEST_USERS:\r\n\t\t\treturn true\r\n\t\tcase RECEIVE_USERS:\r\n\t\t\treturn false\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nfunction byId(state = getCachedById(), action)\r\n{\r\n\tswitch (action.type)\r\n\t{\r\n\t\tcase RECEIVE_LOGIN:\r\n\t\t\t// cache completed & assigned course items when logging in\r\n\t\t\tif ( action.session )\r\n\t\t\t{\t\r\n\t\t\t\tlocalStorage.setItem('completedCourseItems', JSON.stringify(action.completedCourseItems) ) \r\n\t\t\t \tlocalStorage.setItem('assignedCourseItems', JSON.stringify(action.assignedCourseItems) )\r\n\t\t\t\treturn { ...state, [action.session.userId]: { completedCourseItems: action.completedCourseItems, assignedCourseItems: action.assignedCourseItems } }\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\treturn state\r\n\t\tcase RECEIVE_COMPLETE_COURSE_ITEM:\r\n\t\t\tlet completedCourseItems = [ ...state[action.userId].completedCourseItems, action.completedCourseItem]\r\n\t\t\tlocalStorage.setItem('completedCourseItems', JSON.stringify(completedCourseItems) ) // cache completed course item \r\n\t\t\treturn { ...state, [action.userId]: { ...state[action.userId], completedCourseItems } }\r\n\t\tcase RECEIVE_USERS:\r\n\t\t\tlet byId = {}\r\n\t\t\tfor ( let i in action.users )\r\n\t\t\t\tbyId[action.users[i]._id] = { ...action.users[i]  }\r\n\t\t\treturn byId\r\n\t\tcase RECEIVE_ASSIGN_COURSE_ITEM:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t[action.userId]: { \r\n\t\t\t\t\t...state[action.userId],\r\n\t\t\t\t\tassignedCourseItems: [...state[action.userId].assignedCourseItems, action.assignedCourseItem]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\t\r\n\t}\r\n}\r\n\r\nfunction allIds(state = getCachedAllIds(), action)\r\n{\r\n\tswitch (action.type)\r\n\t{\r\n\t\tcase RECEIVE_LOGIN:\r\n\t\t\treturn [...state, action.session.userId]\r\n\t\tcase RECEIVE_USERS:\r\n\t\t\treturn [ ...action.users.map( user => user._id) ]\r\n\t\tdefault:\r\n\t\t\treturn state\t\t\r\n\t}\r\n}\r\n\r\n// used to get default student user data from cache (localStorage)\r\nfunction getCachedById() \r\n{\r\n\tlet userId = localStorage.getItem('userId')\r\n\tlet completedCourseItems = JSON.parse( localStorage.getItem('completedCourseItems') ) || []\r\n\tlet assignedCourseItems = JSON.parse( localStorage.getItem('assignedCourseItems') ) || []\r\n\treturn userId ? { [userId]: {completedCourseItems, assignedCourseItems} } : {}\r\n}\r\nfunction getCachedAllIds()\r\n{\r\n\tlet userId = localStorage.getItem('userId')\r\n\treturn userId ? [userId] : []\r\n}\r\n\r\n// selectors\r\nexport function isCourseItemCompleted(users, courseItemId, userId)\r\n{\r\n\treturn users.byId[userId].completedCourseItems.find( courseItem => courseItem.courseItemId === courseItemId ) ? true : false\r\n}\r\nexport function isCourseItemCompletedGivenCompletedCourseItems(completedCourseItems, courseItemId)\r\n{\r\n\treturn completedCourseItems.find( courseItem => courseItem.courseItemId === courseItemId ) ? true : false \r\n}\r\nexport function getCourseItemIdsByType(courseItems, type)\r\n{\r\n\treturn courseItems.filter( courseItem => courseItem.type === type ).map( courseItem => courseItem.id )\r\n}\r\nexport function getGradeColor(grade)\r\n{\r\n\tif ( grade >= .8)\r\n\t\treturn 'green'\r\n\telse if ( grade >= .7 )\r\n\t\treturn '#424242' // black\r\n\telse if ( grade >= .5 )\r\n\t\treturn '#EF5350' // light red\r\n\telse\r\n\t\treturn 'red' // dark red\r\n}\r\n\r\n\r\nconst users = combineReducers({\r\n\tisFetching,\r\n\tbyId,\r\n\tallIds,\r\n})\r\n\r\nexport default users","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getCourseItemTitleById } from '../../reducers/courses'\r\nimport { Link } from 'react-router-dom'\r\nimport { setSearch, fetchAssignCourseItem, fetchChangeUserRole } from '../../actions'\r\nimport { getCourseItemIdsByType } from '../../reducers/users'\r\n\r\nconst WorkShop = ({sessionRole, users, courseItems, search, currentUser, courses, setSearchSubmit, fetchAssignCourseItemSubmit, fetchChangeUserRoleSubmit}) =>\r\n(\r\n\t<div className='WorkShop'>\r\n\r\n\t\t{/* Display users and allow course items to be assigned if user is 'teacher' */}\r\n\t\t{ sessionRole === 'teacher' && \r\n\t    <ul className='usersList'>\r\n\t      { users.map( user => ( \r\n\t        <li key={`${user._id}`}> \r\n\t          <h5 className='userEmail'>\r\n\t          \t<b> {user.email} </b> &nbsp;\r\n\t          \t<select value={user.role} onChange={ e => fetchChangeUserRoleSubmit(user._id, e.target.value) }>\r\n\t          \t\t<option>teacher</option>\r\n\t          \t\t<option>student</option>\r\n\t          \t</select>\r\n\t          </h5>\r\n\t          <section className='usersCourseItemsList'>\r\n\t          \r\n\t          {/* TaskList (Completed - completedCourseItems) */}\r\n\t          <span>TaskList (Completed): </span>\r\n\t          { user.completedCourseItems.filter( compCourseItem => getCourseItemIdsByType(courseItems, 'lesson').includes(compCourseItem.courseItemId) ).sort((a,b) => (a.completedAt - b.completedAt) ).map( (completedCourseItem, index) => (\r\n\t          \t<Link to={`/courses/${courseItems.find( courseItem => courseItem.id === completedCourseItem.courseItemId ) ? courseItems.find(courseItem => courseItem.id === completedCourseItem.courseItemId ).courseId : ''}/${completedCourseItem.courseItemId}`} \r\n\t          \t\tkey={completedCourseItem.courseItemId}> \r\n\t          \t\t<span className='courseItemsListItem'>{ getCourseItemTitleById(courseItems, completedCourseItem.courseItemId) }{index >= user.completedCourseItems.filter( compCourseItem => getCourseItemIdsByType(courseItems, 'quiz').includes(compCourseItem.courseItemId) ).length - 1 ? null : ','}</span>\r\n\t          \t</Link>\r\n\t          \t) ) \r\n\t        \t}\r\n\t        \t<hr />\r\n\t        \t{/* TaskList (Assigned - assignedcourseItems) */}\r\n\t          <span>TaskList (Assigned): </span>\r\n\t          { user.assignedCourseItems.filter( compCourseItem => getCourseItemIdsByType(courseItems, 'lesson').includes(compCourseItem.courseItemId) ).sort((a,b) => (a.assignedAt - b.assignedAt) ).map( (completedCourseItem, index) => (\r\n\t          \t<Link to={`/courses/${courseItems.find( courseItem => courseItem.id === completedCourseItem.courseItemId ) ? courseItems.find(courseItem => courseItem.id === completedCourseItem.courseItemId ).courseId : ''}/${completedCourseItem.courseItemId}`} \r\n\t          \t\tkey={completedCourseItem.courseItemId}> \r\n\t          \t\t<span className='courseItemsListItem'>\r\n\t          \t\t\t{ getCourseItemTitleById(courseItems, completedCourseItem.courseItemId) }\r\n\t          \t\t\t{index >= user.assignedCourseItems.filter( compCourseItem => getCourseItemIdsByType(courseItems, 'lesson').includes(compCourseItem.courseItemId) ).length - 1 ? null : ','}\r\n\t          \t\t</span>\r\n\t          \t</Link>\r\n\t          \t) ) \r\n\t        \t}\r\n\t        \t</section> \r\n\t        \t\r\n\t        \t{/* assign task form */}\r\n\t        \t<form>\r\n\t        \t\t<input name='courseItemSearch' onBlur={ e => { setSearchSubmit(''); e.target.value = '' } } onChange={ e => setSearchSubmit(e.target.value) } placeholder=\"Add to TaskList...\" />\r\n\t        \t\t<ul className='courseItemSearchResults'>\r\n\t        \t\t\t{ courseItems.filter( courseItem => courseItem.title.substring(0, search.length) === search && !user.assignedCourseItems.find( assignedCourseItem => assignedCourseItem.courseItemId === courseItem.id) && courseItem.type === 'lesson' ).slice(0,4).map( searchResult => (\r\n\t        \t\t\t\t\t<li onMouseDown={ () => fetchAssignCourseItemSubmit(searchResult.id, user._id) } key={searchResult.id}>{searchResult.title}</li>\r\n\t        \t\t\t\t) )\r\n\t        \t\t\t}\r\n\t        \t\t</ul>\r\n\t        \t</form>\r\n\t        </li> \r\n\t        ) ) }\r\n\t    </ul> \r\n\t\t}\r\n\r\n\t{/* Display list of assigned (non-quiz) course items if student is user*/}\r\n\t{ sessionRole === 'student' &&\r\n\t\t<ul style={ {listStyle: 'none'} }>\r\n\t\t\t<h3>TaskList</h3>\r\n\t    { currentUser.assignedCourseItems.filter( compCourseItem => getCourseItemIdsByType(courseItems, 'lesson').includes(compCourseItem.courseItemId) ).sort((a,b) => (a.assignedAt - b.assignedAt) ).map( (completedCourseItem, index) => (\r\n\t    \t<li className='card margin5px' key={completedCourseItem.courseItemId}>\r\n\t    \t\t<h4> Project: &nbsp; \r\n\t    \t\t\t<Link to={`/courses/${courses.byId[courseItems.find( courseItem => courseItem.id === completedCourseItem.courseItemId ).courseId] ?  courses.byId[courseItems.find( courseItem => courseItem.id === completedCourseItem.courseItemId ).courseId]._id : ''}`}>\r\n\t    \t\t\t\t{ courses.byId[courseItems.find( courseItem => courseItem.id === completedCourseItem.courseItemId ).courseId].name }\r\n\t    \t\t\t</Link>\r\n\t    \t\t</h4>\r\n\r\n\t    \t\tAssignment:\r\n\t\t    \t<Link to={`/courses/${courseItems.find( courseItem => courseItem.id === completedCourseItem.courseItemId ) ? courseItems.find(courseItem => courseItem.id === completedCourseItem.courseItemId ).courseId : ''}/${completedCourseItem.courseItemId}`} > \r\n\t\t    \t\t<span className='courseItemsListItem'>\r\n\t\t    \t\t\t { getCourseItemTitleById(courseItems, completedCourseItem.courseItemId) }\r\n\t\t    \t\t</span>\r\n\t\t    \t</Link>\r\n\t    \t</li>\r\n\t    \t) ) \r\n\t  \t}\r\n\t\t</ul>\r\n\t}\r\n\r\n\t</div>\r\n)\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n\tsessionRole: state.session.role,\r\n\tusers: state.entities.users.allIds.filter( id => id !== state.session.userId ).map( id => state.entities.users.byId[id] ),\r\n\tcourseItems: ownProps.courseItems,\r\n\tsearch: state.ui.search,\r\n\tcurrentUser: state.entities.users.byId[state.session.userId],\r\n\tcourses: state.entities.courses\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tsetSearchSubmit: search => dispatch( setSearch(search) ),\r\n\tfetchAssignCourseItemSubmit: (courseItemId, userId) => dispatch( fetchAssignCourseItem(courseItemId, userId) ),\r\n\tfetchChangeUserRoleSubmit: (userId, role) => dispatch( fetchChangeUserRole(userId, role) )\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WorkShop)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getCourseItemTitleById } from '../../reducers/courses'\r\nimport { Link } from 'react-router-dom'\r\nimport { setSearch, fetchAssignCourseItem } from '../../actions'\r\nimport { getCourseItemIdsByType, getGradeColor } from '../../reducers/users'\r\n\r\nconst TestBench = ({sessionRole, users, courseItems, search, currentUser, courses, setSearchSubmit, fetchAssignCourseItemSubmit}) =>\r\n(\r\n\t<div className='TestBench'>\r\n\r\n\t\t{/* Display users and allow course items to be assigned if user is 'teacher' */}\r\n\t\t{ sessionRole === 'teacher' && \r\n\t    <ul className='usersList'>\r\n\t      { users.map( user => ( \r\n\t        <li key={`${user._id}`}> \r\n\t          <h5 className='userEmail'><b> {user.email}</b></h5>\r\n\t          <section className='usersCourseItemsList'>\r\n\t          \r\n\t          {/* TestList (Completed - completedCourseItems) */}\r\n\t          <span>TestList (Completed): </span>\r\n\t          { user.completedCourseItems.filter( compCourseItem => getCourseItemIdsByType(courseItems, 'quiz').includes(compCourseItem.courseItemId) ).sort((a,b) => (a.completedAt - b.completedAt) ).map( (completedCourseItem, index) => (\r\n\t          \t<Link to={`/courses/${courseItems.find( courseItem => courseItem.id === completedCourseItem.courseItemId ) ? courseItems.find(courseItem => courseItem.id === completedCourseItem.courseItemId ).courseId : ''}/${completedCourseItem.courseItemId}`} \r\n\t          \t\tkey={completedCourseItem.courseItemId}> \r\n\t          \t\t<span className='courseItemsListItem'>\r\n\t          \t\t\t{ getCourseItemTitleById(courseItems, completedCourseItem.courseItemId) }\r\n\t          \t\t\t<span style={ {color: getGradeColor(completedCourseItem.grade)}  }> {completedCourseItem.grade * 100}%</span>\r\n\t          \t\t\t{index >= user.completedCourseItems.filter( compCourseItem => getCourseItemIdsByType(courseItems, 'quiz').includes(compCourseItem.courseItemId) ).length - 1 ? null : ','}\r\n\t          \t\t</span>\r\n\t          \t</Link>\r\n\t          \t) ) \r\n\t        \t}\r\n\t        \t<hr />\r\n\t        \t{/* TestList (Assigned - assignedcourseItems) */}\r\n\t          <span>TestList (Assigned): </span>\r\n\t          { user.assignedCourseItems.filter( compCourseItem => getCourseItemIdsByType(courseItems, 'quiz').includes(compCourseItem.courseItemId) ).sort((a,b) => (a.assignedAt - b.assignedAt) ).map( (completedCourseItem, index) => (\r\n\t          \t<Link to={`/courses/${courseItems.find( courseItem => courseItem.id === completedCourseItem.courseItemId ) ? courseItems.find(courseItem => courseItem.id === completedCourseItem.courseItemId ).courseId : ''}/${completedCourseItem.courseItemId}`} \r\n\t          \t\tkey={completedCourseItem.courseItemId}> \r\n\t          \t\t<span className='courseItemsListItem'>\r\n\t          \t\t\t{ getCourseItemTitleById(courseItems, completedCourseItem.courseItemId) }\r\n\t          \t\t\t{index >= user.assignedCourseItems.filter( compCourseItem => getCourseItemIdsByType(courseItems, 'quiz').includes(compCourseItem.courseItemId) ).length - 1 ? null : ','}\r\n\t          \t\t</span>\r\n\t          \t</Link>\r\n\t          \t) ) \r\n\t        \t}\r\n\t        \t</section> \r\n\t        \t\r\n\t        \t{/* assign task (to TestList) form */}\r\n\t        \t<form>\r\n\t        \t\t<input name='courseItemSearch' onBlur={ e => { setSearchSubmit(''); e.target.value = '' } } onChange={ e => setSearchSubmit(e.target.value) } placeholder=\"Add to TestList...\" />\r\n\t        \t\t<ul className='courseItemSearchResults'>\r\n\t        \t\t\t{ courseItems.filter( courseItem => courseItem.title.substring(0, search.length) === search && !user.assignedCourseItems.find( assignedCourseItem => assignedCourseItem.courseItemId === courseItem.id) && courseItem.type === 'quiz' ).slice(0,4).map( searchResult => (\r\n\t        \t\t\t\t\t<li onMouseDown={ () => fetchAssignCourseItemSubmit(searchResult.id, user._id) } key={searchResult.id}>{searchResult.title}</li>\r\n\t        \t\t\t\t) )\r\n\t        \t\t\t}\r\n\t        \t\t</ul>\r\n\t        \t</form>\r\n\t        </li> \r\n\t        ) ) }\r\n\t    </ul> \r\n\t\t}\r\n\r\n\t{/* Display list of assigned (quiz) course items if student is user */}\r\n\t{ sessionRole === 'student' &&\r\n\t\t<section className='studentTestBench'>\r\n\t\t\t\r\n\t\t\t<ul style={ {listStyle: 'none'} }> {/* TestList */}\r\n\t\t\t\t<h3>TestList</h3>\r\n\t\t    { currentUser.assignedCourseItems.filter( compCourseItem => getCourseItemIdsByType(courseItems, 'quiz').includes(compCourseItem.courseItemId) ).sort((a,b) => (a.assignedAt - b.assignedAt) ).map( (completedCourseItem, index) => (\r\n\t\t    \t<li className='card margin5px' key={completedCourseItem.courseItemId}>\r\n\t\t    \t\t<h4> Project: &nbsp; \r\n\t\t    \t\t\t<Link to={`/courses/${courses.byId[courseItems.find( courseItem => courseItem.id === completedCourseItem.courseItemId ).courseId] ?  courses.byId[courseItems.find( courseItem => courseItem.id === completedCourseItem.courseItemId ).courseId]._id : ''}`}>\r\n\t\t    \t\t\t\t{ courses.byId[courseItems.find( courseItem => courseItem.id === completedCourseItem.courseItemId ).courseId].name }\r\n\t\t    \t\t\t</Link>\r\n\t\t    \t\t</h4>\r\n\r\n\t\t    \t\tAssignment:\r\n\t\t\t    \t<Link to={`/courses/${courseItems.find( courseItem => courseItem.id === completedCourseItem.courseItemId ) ? courseItems.find(courseItem => courseItem.id === completedCourseItem.courseItemId ).courseId : ''}/${completedCourseItem.courseItemId}`} > \r\n\t\t\t    \t\t<span className='courseItemsListItem'>\r\n\t\t\t    \t\t\t { getCourseItemTitleById(courseItems, completedCourseItem.courseItemId) }\r\n\t\t\t    \t\t</span>\r\n\t\t\t    \t</Link>\r\n\t\t    \t</li>\r\n\t\t    \t) ) \r\n\t\t  \t}\r\n\t\t\t</ul>\r\n\t\t\t\r\n\t\t\t<ul style={ {listStyle: 'none'} }> {/* Completed Quizzes */}\r\n\t\t\t\t<h3>Completed Quizzes</h3>\r\n\t\t    { currentUser.completedCourseItems.filter( compCourseItem => getCourseItemIdsByType(courseItems, 'quiz').includes(compCourseItem.courseItemId) ).sort((a,b) => (a.completedAt - b.completedAt) ).map( (completedCourseItem, index) => (\r\n\t\t    \t<li className='card margin5px' key={completedCourseItem.courseItemId}>\r\n\t\t    \t\t<h4> Project: &nbsp; \r\n\t\t    \t\t\t<Link to={`/courses/${courses.byId[courseItems.find( courseItem => courseItem.id === completedCourseItem.courseItemId ).courseId] ?  courses.byId[courseItems.find( courseItem => courseItem.id === completedCourseItem.courseItemId ).courseId]._id : ''}`}>\r\n\t\t    \t\t\t\t{ courses.byId[courseItems.find( courseItem => courseItem.id === completedCourseItem.courseItemId ).courseId].name }\r\n\t\t    \t\t\t</Link>\r\n\t\t    \t\t</h4>\r\n\r\n\t\t    \t\tAssignment:\r\n\t\t\t    \t<Link to={`/courses/${courseItems.find( courseItem => courseItem.id === completedCourseItem.courseItemId ) ? courseItems.find(courseItem => courseItem.id === completedCourseItem.courseItemId ).courseId : ''}/${completedCourseItem.courseItemId}`} > \r\n\t\t\t    \t\t<span className='courseItemsListItem'>\r\n\t\t\t    \t\t\t { getCourseItemTitleById(courseItems, completedCourseItem.courseItemId) }\r\n\t\t\t    \t\t</span>\r\n\t\t\t    \t</Link>\r\n\r\n\t\t\t    \t<h6>Grade: <span style={ {color: getGradeColor(completedCourseItem.grade)} }>{ completedCourseItem.grade * 100 }%</span></h6>\r\n\t\t    \t</li>\r\n\t\t    \t) ) \r\n\t\t  \t}\r\n\t\t\t</ul>\r\n\r\n\t\t\t<ul style={ {listStyle: 'none'} }> {/* Completed Tasks (Non-quiz courseItems) */}\r\n\t\t\t\t<h3>Completed Tasks</h3>\r\n\t\t    { currentUser.completedCourseItems.filter( compCourseItem => getCourseItemIdsByType(courseItems, 'lesson').includes(compCourseItem.courseItemId) ).sort((a,b) => (a.completedAt - b.completedAt) ).map( (completedCourseItem, index) => (\r\n\t\t    \t<li className='card margin5px' key={completedCourseItem.courseItemId}>\r\n\t\t    \t\t<h4> Project: &nbsp; \r\n\t\t    \t\t\t<Link to={`/courses/${courses.byId[courseItems.find( courseItem => courseItem.id === completedCourseItem.courseItemId ).courseId] ?  courses.byId[courseItems.find( courseItem => courseItem.id === completedCourseItem.courseItemId ).courseId]._id : ''}`}>\r\n\t\t    \t\t\t\t{ courses.byId[courseItems.find( courseItem => courseItem.id === completedCourseItem.courseItemId ).courseId].name }\r\n\t\t    \t\t\t</Link>\r\n\t\t    \t\t</h4>\r\n\r\n\t\t    \t\tAssignment:\r\n\t\t\t    \t<Link to={`/courses/${courseItems.find( courseItem => courseItem.id === completedCourseItem.courseItemId ) ? courseItems.find(courseItem => courseItem.id === completedCourseItem.courseItemId ).courseId : ''}/${completedCourseItem.courseItemId}`} > \r\n\t\t\t    \t\t<span className='courseItemsListItem'>\r\n\t\t\t    \t\t\t { getCourseItemTitleById(courseItems, completedCourseItem.courseItemId) }\r\n\t\t\t    \t\t</span>\r\n\t\t\t    \t</Link>\r\n\r\n\t\t    \t</li>\r\n\t\t    \t) ) \r\n\t\t  \t}\r\n\t\t\t</ul>\r\n\r\n\r\n\t\t</section>\r\n\t}\r\n\r\n\t</div>\r\n)\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n\tsessionRole: state.session.role,\r\n\tusers: state.entities.users.allIds.map( id => state.entities.users.byId[id] ),\r\n\tcourseItems: ownProps.courseItems,\r\n\tsearch: state.ui.search,\r\n\tcurrentUser: state.entities.users.byId[state.session.userId],\r\n\tcourses: state.entities.courses\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tsetSearchSubmit: search => dispatch( setSearch(search) ),\r\n\tfetchAssignCourseItemSubmit: (courseItemId, userId) => dispatch( fetchAssignCourseItem(courseItemId, userId) )\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TestBench)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst WorkBench = ({children}) =>\r\n(\r\n\t<div className='WorkBench'>\r\n\t\t<h2>Projects</h2>\r\n\t\t{children}\r\n\t</div>\r\n)\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n\tchildren: ownProps.children\r\n})\r\n\r\nexport default connect(mapStateToProps)(WorkBench)","import React from 'react';\r\nimport './App.css';\r\nimport { connect } from 'react-redux'\r\nimport {  NavLink } from 'react-router-dom'\r\n\r\nimport { fetchSignup, fetchLogout } from '../../actions.js'\r\nimport Test from '../Test/Test.js'\r\nimport Login from '../Login/Login.js'\r\nimport Sidebar from '../Sidebar/Sidebar.js'\r\nimport Course from '../Course/Course.js'\r\nimport Navbar from '../Navbar/Navbar.js'\r\nimport WorkShop from '../WorkShop/WorkShop.js'\r\nimport TestBench from '../TestBench/TestBench.js'\r\nimport WorkBench from '../WorkBench/WorkBench.js'\r\nimport { fetchCompleteCourseItem, fetchUsers } from '../../actions'\r\nimport { isCourseItemCompleted } from '../../reducers/users'\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props)\r\n  {\r\n    super(props)\r\n\r\n    this.completeCourseItemSubmit = this.completeCourseItemSubmit.bind(this) // used in WorkShop & Sidebar to complete course items by students\r\n  }\r\n\r\n  componentWillMount()\r\n  {\r\n    if ( this.props.history.location.pathname === '/login' ) // redirect to home page after logging in\r\n    {\r\n      this.props.history.push('/')\r\n      if ( this.props.session.role === 'teacher'  ) // fetch users for home page if user is 'teacher'\r\n        this.props.dispatch( fetchUsers() )\r\n    }\r\n  }\r\n\r\n  componentDidMount() // fetches user on home page refresh ( for 'teacher' )\r\n  {\r\n    if ( this.props.session.role === 'teacher' && this.props.match.url === '/' ) // fetch users on home page is user is 'teacher'\r\n      this.props.dispatch( fetchUsers() )\r\n  }\r\n\r\n  completeCourseItemSubmit(courseItem)\r\n  {\r\n    if (this.props.session.role === 'student' && !isCourseItemCompleted(this.props.users, courseItem.id, this.props.session.userId) && courseItem.type !== 'quiz')  \r\n      this.props.dispatch( fetchCompleteCourseItem(courseItem.id) )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n\r\n        {/* Navbar */}\r\n        <Navbar />\r\n\r\n        {/* Sidebar */}\r\n        <Sidebar courseName={this.props.params} courseId={ this.props.match.params.courseId }> \r\n          <ul style={ {listStyle: 'none', textAlign: 'left', paddingLeft: '25px'} }>\r\n            <h4> { this.props.courses.find( course => course._id === this.props.match.params.courseId ) ? this.props.courses.find( course => course._id === this.props.match.params.courseId ).name : '' /* this selected should be refactored and moved to matchStateToProps() */ }</h4>\r\n\r\n            { (!this.props.match.params.courseId || this.props.match.params.courseId === '') && // Sidebar for home page\r\n              this.props.courses.map( (course, index) => \r\n              (\r\n                <li key={index}> <NavLink to={`/courses/${course._id}`}>{course.name}</NavLink> </li>\r\n              ) ) \r\n            }\r\n            { this.props.match.params.courseId && this.props.match.params.courseId !== '' && // Sidebar for course/courseItem pages\r\n                this.props.courseItems.map( (courseItem, index) => \r\n                (\r\n\r\n                  <li key={courseItem.id} onClick={ \r\n                    () => this.completeCourseItemSubmit(courseItem)  /* complete (non-quiz) course item if user is student */ \r\n                  }> \r\n                    <NavLink style={ courseItem.id === this.props.match.params.courseItemId ? {color: 'red'} : {} } to={`/courses/${this.props.match.params.courseId}/${courseItem.id}`} >\r\n                      <span style={ courseItem.parentCourseItemId ? {marginLeft: '15px'} : {} }> {courseItem.title} </span> \r\n                    </NavLink> \r\n                  </li>\r\n                ) )\r\n            }\r\n          </ul>\r\n        </Sidebar>          \r\n\r\n        {/* session role banner */}\r\n        <header>\r\n          <span className='sessionStatus'>{ this.props.session.sessionId ? `Logged in with role '${this.props.session.role}'` : 'Logged Out' }</span>\r\n          { this.props.session.sessionId &&  // only render logout button if logged in\r\n            <button className='logoutButton' onClick={ () => this.props.session.sessionId ? this.props.dispatch( fetchLogout(this.props.session.sessionId, this.props.session.userId) ) : alert('You are already logged out') }>Logout</button>\r\n          }\r\n        </header>\r\n\r\n        {/* main content area */}\r\n        <main className='main'>\r\n\r\n          { this.props.architectureLevel === 'WorkShop' && !this.props.match.params.courseId &&\r\n            <WorkShop courseItems={this.props.courseItems} />           \r\n          }\r\n\r\n          { this.props.architectureLevel === 'TestBench' && !this.props.match.params.courseId &&\r\n            <TestBench courseItems={this.props.courseItems} />\r\n          }\r\n\r\n          { this.props.architectureLevel === 'WorkBench' && !this.props.match.params.courseId &&\r\n            <WorkBench>\r\n              <ul style={ {listStyle: 'none'} }>\r\n                { (!this.props.match.params.courseId || this.props.match.params.courseId === '') && // List of courses (Projects) for home page\r\n                  this.props.courses.map( (course, index) => \r\n                  (\r\n                    <li className='card margin5px' key={index}> \r\n                      <NavLink to={`/courses/${course._id}`}>{course.name}</NavLink> \r\n                      <br />\r\n                      { this.props.allCourseItems.filter( courseItem => courseItem.courseId === course._id ).map( courseItem => (\r\n                          <span key={courseItem.id}>{courseItem.title}</span>\r\n                        ) )\r\n                      }\r\n                    </li>\r\n                  ) ) \r\n                }\r\n              </ul>\r\n            </WorkBench>\r\n          }\r\n\r\n\r\n          { ( this.props.match.path.includes('/courses') && this.props.location.pathname.match( new RegExp('/', 'g') ).length < 3 )  &&\r\n            <Course courseId={ this.props.match.params.courseId }>\r\n              <ul style={ {listStyle: 'none'} }>\r\n                { this.props.match.params.courseId && this.props.match.params.courseId !== '' && // list for course/courseItem pages\r\n                    this.props.courseItems.map( (courseItem, index) => \r\n                    (\r\n\r\n                      <li key={courseItem.id} onClick={ \r\n                        () => this.completeCourseItemSubmit(courseItem)  /* complete (non-quiz) course item if user is student */ \r\n                      }> \r\n                        <NavLink style={ courseItem.id === this.props.match.params.courseItemId ? {color: 'red'} : {} } to={`/courses/${this.props.match.params.courseId}/${courseItem.id}`} >\r\n                          <span style={ courseItem.parentCourseItemId ? {marginLeft: '15px'} : {} }> {courseItem.title} </span> \r\n                        </NavLink> \r\n                      </li>\r\n                    ) )\r\n                }\r\n              </ul>\r\n            </Course>\r\n          }\r\n\r\n          { this.props.match.params.currentComponent === 'test' &&\r\n            <Test />\r\n          }\r\n\r\n          { (!this.props.session.sessionId || this.props.match.params.currentComponent === 'login') &&\r\n            <Login />\r\n          }\r\n\r\n          { ( this.props.match.params.currentComponent === 'login' ) &&\r\n            <section className='temporaryWrapper'>\r\n\r\n              <h3>Signup Form - Testing Only (ufl.edu emails will be used in future)</h3>\r\n\r\n              <form onSubmit={ e =>\r\n              {\r\n                e.preventDefault()\r\n                let email = e.target.email.value.trim()\r\n                let password = e.target.password.value.trim()\r\n\r\n                if ( email && password )\r\n                {\r\n                  this.props.dispatch( fetchSignup(email, password) )\r\n                  // reset signup form after successful submission\r\n                  e.target.email.value = ''\r\n                  e.target.password.value = ''\r\n                }\r\n                else\r\n                  alert('A valid email & password are required')\r\n              } }>\r\n                <input name='email' type='text' />\r\n                <input name='password' type='password' />\r\n\r\n                <button type='submit'>Sign Up</button>\r\n              </form>\r\n            </section>\r\n          }\r\n        </main>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  let courseItems = state.entities.courseItems.allIds.map( id => state.entities.courseItems.byId[id] ).filter( courseItem => courseItem.courseId === ownProps.match.params.courseId ) // grab course items for current course\r\n  let subCourseItems = []\r\n  let orderedCourseItems = [] // ordered to have sub course items right after their parent course item\r\n  for ( let i in courseItems )\r\n  {\r\n    if ( courseItems[i].parentCourseItemId )\r\n      subCourseItems.push( courseItems[i] )\r\n    else\r\n      orderedCourseItems.push( courseItems[i] )    \r\n  }\r\n  if ( ownProps.match.url === '/' ) // get all courseItemIds if on home page (used to display completed course items)\r\n    orderedCourseItems = state.entities.courseItems.allIds.map( id => state.entities.courseItems.byId[id] )\r\n\r\n  let parentIndex = -1 // -1 is the not found value of indexOf()\r\n  for ( let i in subCourseItems )\r\n  {\r\n    parentIndex = orderedCourseItems.map( courseItem => courseItem.id ).indexOf(subCourseItems[i].parentCourseItemId)\r\n    if ( parentIndex > -1)\r\n      orderedCourseItems.splice(parentIndex + 1, 0, subCourseItems[i])\r\n  }\r\n  \r\n  return {\r\n    session: state.session,\r\n    courses: state.entities.courses.allIds.map( id => state.entities.courses.byId[id] ),\r\n    courseItems: orderedCourseItems,\r\n    users: state.entities.users,\r\n    architectureLevel: state.ui.architectureLevel,\r\n    allCourseItems: state.entities.courseItems.allIds.map( id => state.entities.courseItems.byId[id] )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchEditCourseItem, fetchAddSubCourseItem, fetchCompleteCourseItem, setArchitectureLevel } from '../../actions'\r\nimport CKEditor from '../CKEditor/CKEditor.js'\r\nimport SRSImport from '../SRSImport/SRSImport'\r\nimport { isCourseItemCompletedGivenCompletedCourseItems } from '../../reducers/users'\r\n\r\nclass CourseItem extends React.Component {\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props)\r\n\t\tthis.state = { isEditing: false, isAddingSubCourseItem: false, answers: [], numWrongAnswerAttempts: 0 } \r\n\t}\r\n\r\n\tisAnswerCorrect(problemIndex)\r\n\t{\r\n\t\tif ( this.state.answers[problemIndex] === this.props.courseItem.problems[problemIndex].correctOptionIndex ) // return correct answer styles\r\n\t\t\treturn (<i className=\"material-icons problemIcon green\">check</i>) // correctAnswer\r\n\t\telse if ( !this.state.answers[problemIndex] && this.state.answers[problemIndex] !== 0 ) \r\n\t\t\treturn (<i className=\"material-icons problemIcon\">help_outline</i>) // unanswered\r\n\t\telse // return incorrect styles\r\n\t\t\treturn (<i className=\"material-icons problemIcon red\">clear</i>) // incorrectAnswer\r\n\t}\r\n\r\n\tfetchCompleteQuizIfComplete() // check all problems have been answered correctly before allowing user to complete quiz\r\n\t{\r\n\t\tfor ( let i in this.props.courseItem.problems )\r\n\t\t\tif ( !(this.state.answers[i] === this.props.courseItem.problems[i].correctOptionIndex)/* correct answer*/ )\r\n\t\t\t\treturn false \r\n\r\n\t\t// all problems had parallel correct answers in local state, complete quiz if not already completed\r\n\t\tif ( !isCourseItemCompletedGivenCompletedCourseItems(this.props.completedCourseItems, this.props.courseItem.id) ) \r\n\t\t\tthis.props.fetchCompleteQuiz(this.props.courseItem.id, ( 1 - ( this.state.numWrongAnswerAttempts / this.props.courseItem.problems.length) ) )\r\n\t}\t\r\n\r\n\tcomponentDidMount()\r\n\t{\r\n\t\tif ( this.props.architectureLevel !== 'WorkBench' )\r\n\t\t\tthis.props.setArchitectureLevel('WorkBench')\r\n\t}\t\r\n\r\n\trender()\r\n\t{\r\n\t\treturn(\r\n\t\t\t<div className='CourseItem' style={ {paddingLeft: '315px', position: 'absolute', left: '0px', top: '100px'} }>\r\n\t\t\t\t{ this.props.sessionRole === 'teacher' && // only show edit button to users with role 'teacher'\r\n\t\t\t\t\t<section className='courseItemEditingArea'>\r\n\t\t\t\t\t\t{ !this.state.isAddingSubCourseItem &&\r\n\t\t\t\t\t\t\t<button onClick={ () => this.setState( (prevState) => ({isEditing: !prevState.isEditing}) ) }> { this.state.isEditing ? 'Stop Editing' : 'Edit'}</button>\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{ !this.state.isEditing && !this.props.courseItem.parentCourseItemId && // (do not allow users to add sub course items to sub course items)\r\n\t\t\t\t\t\t\t<button onClick={ () => this.setState( (prevState) => ({isAddingSubCourseItem: !prevState.isAddingSubCourseItem}) ) }> { this.state.isAddingSubCourseItem ? 'Stop Adding Sub Course Item' : 'Add Sub Course Item'}</button>\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t{ this.state.isEditing && !this.state.isAddingSubCourseItem && // edit course item CKEditor\r\n\t\t\t\t\t\t\t<CKEditor fetchEditCourseItemClick={ this.props.fetchEditCourseItemClick } editingContent={this.props.courseItem.content} type={ this.props.courseItem.type } />\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t{ this.state.isAddingSubCourseItem && !this.state.isEditing && !this.props.courseItem.parentCourseItemId && // add sub course item CKEditor (do not allow users to add sub course items to sub course items)\r\n\t\t\t\t\t\t\t<CKEditor isAddingSubCourseItem={true} fetchAddSubCourseItemClick={ this.props.fetchAddSubCourseItemClick } type={ this.props.courseItem.type } />\r\n\t\t\t\t\t\t}\t\r\n\t\t\t\t\t</section>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t<h2>{ this.props.courseItem.title }</h2>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<section style={ {padding: '15px'} } className='courseItemContent' dangerouslySetInnerHTML={ {__html: this.props.courseItem.content} }></section>\r\n\t\t\t\r\n\t\t\t\t{ this.props.courseItem.type === 'quiz' && // render problems if course item is quiz\r\n\t\t\t\t\t<ul style={ {listStyle: 'none'} }>\r\n\t\t\t\t\t\t{ this.props.courseItem.problems.map( problem => (\r\n\t\t\t\t\t\t\t<li key={problem.id} className='problem'> \r\n\t\t\t\t\t\t\t\t<h4> { this.isAnswerCorrect( parseInt(problem.id, 10) ) } {parseInt(problem.id, 10) + 1}. {problem.question}</h4> \r\n\t\t\t\t\t\t\t\t{ problem.options.map( (option, index) => (\r\n\t\t\t\t\t\t\t\t\t<button key={index} onClick={ () => \r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tlet newAnswers = [...this.state.answers] // copy answers to avoid mutating\r\n\t\t\t\t\t\t\t\t\t\t\tlet isOptionWrong = 0\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tif ( newAnswers[ parseInt(problem.id, 10) ] === undefined && problem.correctOptionIndex !== index ) // only mark answers wrong on first attempt\r\n\t\t\t\t\t\t\t\t\t\t\t\tisOptionWrong = 1\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\tnewAnswers[ parseInt(problem.id, 10) ] = index // add user-chosen option to CourseItem's local state's answers array\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t// update CourseItem local state\r\n\t\t\t\t\t\t\t\t\t\t\tthis.setState((prevState) => ({answers: newAnswers, numWrongAnswerAttempts: prevState.numWrongAnswerAttempts + isOptionWrong}), this.fetchCompleteQuizIfComplete )\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t} }>\r\n\t\t\t\t\t\t\t\t\t\t{option}\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t) )\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t) )\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t}\r\n\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n} \r\n\r\nCourseItem.defaultProps = {\r\n\tcourseItem: {parentCourseItemId: false} // needed to render on refresh\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n\tsessionRole: state.session.role,\r\n\tcourseItem: state.entities.courseItems.byId[ownProps.match.params.courseItemId],\r\n\tlocation: ownProps.location,\r\n\tcompletedCourseItems: state.entities.users.byId[state.session.userId].completedCourseItems || [],\r\n\tarchitectureLevel: state.ui.architectureLevel\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n\tfetchEditCourseItemClick: (type, content) => dispatch( fetchEditCourseItem(ownProps.match.params.courseId, ownProps.match.params.courseItemId, type, content) ),\r\n\tfetchAddSubCourseItemClick: (type, title, content) => dispatch( fetchAddSubCourseItem(ownProps.match.params.courseId, ownProps.match.params.courseItemId, type, title, content) ),\r\n\tfetchCompleteQuiz: (courseItemId, grade) => dispatch( fetchCompleteCourseItem(courseItemId, grade) ),\r\n\tsetArchitectureLevel: architectureLevel => dispatch( setArchitectureLevel(architectureLevel) )\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CourseItem)","// reducers use slice reducer composition -> https://redux.js.org/recipes/structuring-reducers/updating-normalized-data\r\nimport { combineReducers } from 'redux'\r\nimport { REQUEST_TESTS, RECEIVE_TESTS } from '../actions'\r\n\r\nfunction isFetching(state = false, action)\r\n{\r\n\tswitch ( action.type )\r\n\t{\r\n\t\tcase REQUEST_TESTS:\r\n\t\t\treturn true\r\n\t\tcase RECEIVE_TESTS:\r\n\t\t\treturn false\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nfunction byId(state = { \t\t \r\n\t\t'offlineId0': { message: 'Default offline test message 1'},\r\n\t\t'offlineId1': { message: 'Default offline test message 2' }\r\n\t}, action) \r\n{\r\n\tswitch (action.type)\r\n\t{\r\n\t\tcase RECEIVE_TESTS:\r\n\t\t\tlet byId = {}\r\n\t\t\tfor ( let i in action.tests )\r\n\t\t\t\tbyId[action.tests[i].createdAt] = { message: action.tests[i].message }\r\n\t\t\treturn byId // { action.tests.map( test => test.createdAt: { message: test.message } ) }\r\n\t\tdefault:\r\n\t\t\treturn state \r\n\t}\r\n}\r\n\r\nfunction allIds(state = ['offlineId0', 'offlineId1'] , action)\r\n{\r\n\tswitch (action.type)\r\n\t{\r\n\t\tcase RECEIVE_TESTS:\r\n\t\t\treturn [ action.tests.map( test => test.createdAt) ]\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\t\r\n}\r\n\r\nconst tests = combineReducers({\r\n\tisFetching,\r\n\tbyId,\r\n\tallIds\r\n})\r\nexport default tests","import { combineReducers } from 'redux'\r\nimport { ADD_PROBLEM, REMOVE_PROBLEM, RECEIVE_PROBLEMS, EDIT_PROBLEM_QUESTION, ADD_PROBLEM_OPTION, REMOVE_PROBLEM_OPTION, EDIT_PROBLEM_CORRECT_OPTION_INDEX } from '../actions'\r\n\r\nfunction byId(state = {}, action)\r\n{\r\n\tswitch (action.type)\r\n\t{\r\n\t\tcase ADD_PROBLEM: \r\n\t\t\treturn { ...state, [action.problem.id]: { ...action.problem } }\r\n\t\tcase REMOVE_PROBLEM:\r\n\t\t\tlet { [action.problemId]: deleteItem, ...rest } = state // use es6 spread operator to remove data without mutating\r\n\t\t\treturn rest\r\n\t\tcase EDIT_PROBLEM_QUESTION:\r\n\t\t\treturn { \r\n\t\t\t\t...state, \r\n\t\t\t\t[action.problemId]: { \r\n\t\t\t\t\t...state[action.problemId], \r\n\t\t\t\t\tquestion: action.question\r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\tcase ADD_PROBLEM_OPTION:\r\n\t\t\treturn { \r\n\t\t\t\t...state, \r\n\t\t\t\t[action.problemId]: { \r\n\t\t\t\t\t...state[action.problemId], \r\n\t\t\t\t\toptions: [ ...state[action.problemId].options, action.option ] \r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\tcase REMOVE_PROBLEM_OPTION:\r\n\t\t\treturn state // *tba: modify correctOptionIndex or set it to null as well\r\n\t\tcase EDIT_PROBLEM_CORRECT_OPTION_INDEX:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t[action.problemId]: {\r\n\t\t\t\t\t...state[action.problemId],\r\n\t\t\t\t\tcorrectOptionIndex: action.correctOptionIndex\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\tcase RECEIVE_PROBLEMS:\r\n\t\t\t// *tba once problems are normalized (right now they are nested in courseItems of type quiz)\r\n\t\t\treturn state\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nfunction allIds(state = [], action)\r\n{\r\n\tswitch (action.type)\r\n\t{\r\n\t\tcase ADD_PROBLEM:\r\n\t\t\treturn [...state, action.problem.id]\r\n\t\tcase REMOVE_PROBLEM:\r\n\t\t\treturn state.filter( id => id !== action.problemId )\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nconst problems = combineReducers({\r\n\tbyId,\r\n\tallIds\r\n})\r\n\r\nexport default problems","import { combineReducers } from 'redux'\r\nimport {\r\n\t// session action types\r\n\tREQUEST_SIGNUP, RECEIVE_SIGNUP, \r\n\tREQUEST_LOGIN, RECEIVE_LOGIN, \r\n\tREQUEST_LOGOUT, RECEIVE_LOGOUT,\r\n\tRECEIVE_REFRESH_SESSION, // *tba: session is refreshed by any authenticated request that succeeds\r\n\tSET_ARCHITECTURE_LEVEL, SET_SEARCH // ui\r\n} from '../actions.js'\r\n// import reducers\r\nimport tests from './tests'\r\nimport {courses, courseItems} from './courses'\r\nimport users from './users'\r\nimport problems from './problems'\r\n\r\nconst entities = combineReducers({\r\n\tcourses, \r\n\tcourseItems,\r\n\tproblems,\r\n\ttests, \r\n\tusers\r\n})\r\n\r\nfunction session(state, action)\r\n{\r\n\tswitch (action.type)\r\n\t{\r\n\t\tcase REQUEST_SIGNUP:\r\n\t\t\treturn { isFetching: true, ...state, }\r\n\t\tcase RECEIVE_SIGNUP:\r\n\t\t\t// save session in localStorage to persist\r\n\t\t\tlocalStorage.setItem('userId', action.session.userId); localStorage.setItem('sessionId', action.session.sessionId) \r\n\t\t\tlocalStorage.setItem('expiresAt', action.session.expiresAt); localStorage.setItem('role', action.session.role)\r\n\t\t\twindow.location.reload() // temporary method of redirect\r\n\t\t\treturn { isFetching: false, userId: action.session.userId, sessionId: action.session.sessionId, expiresAt: action.session.expiresAt, role: action.session.role }\r\n\t\tcase REQUEST_LOGIN:\r\n\t\t\treturn { isFetching: true, ...state }\r\n\t\tcase RECEIVE_LOGIN:\r\n\t\t\t// save session in localStorage to persist\r\n\t\t\tlocalStorage.setItem('userId', action.session.userId); localStorage.setItem('sessionId', action.session.sessionId)\r\n\t\t\tlocalStorage.setItem('expiresAt', action.session.expiresAt); localStorage.setItem('role', action.session.role)\r\n\t\t\twindow.location.reload() // temporary method of redirect\r\n\t\t\treturn { isFetching: false, userId: action.session.userId, sessionId: action.session.sessionId, expiresAt: action.session.expiresAt, role: action.session.role }\r\n\t\tcase REQUEST_LOGOUT:\r\n\t\t\treturn { isFetching: true }\r\n\t\tcase RECEIVE_LOGOUT:\r\n\t\t\t// save session in localStorage to persist\r\n\t\t\tlocalStorage.removeItem('userId'); localStorage.removeItem('sessionId'); localStorage.removeItem('expiresAt'); localStorage.removeItem('role')\r\n\t\t\twindow.location.reload() // temporary method of redirect\r\n\t\t\treturn { isFetching: false } // wipe all session data except isFetching\t\t\t\r\n\t\tcase RECEIVE_REFRESH_SESSION:\r\n\t\t\tconsole.log(`'session reducer's case REFRESH_SESSION tba`)\r\n\t\t\treturn state\r\n\t\tdefault:\r\n\t\t\tif ( parseInt(localStorage.getItem('expiresAt'), 10) > Date.now() ) // do not load session from localStorage if it is expired\r\n\t\t\t\treturn {isFetching: false, userId: localStorage.getItem('userId'), sessionId: localStorage.getItem('sessionId'), \r\n\t\t\t\t\texpiresAt: parseInt(localStorage.getItem('expiresAt'), 10), role: localStorage.getItem('role') } // by default load session from localStorage\r\n\t\t\telse\r\n\t\t\t\treturn { isFetching: false }\r\n\t}\r\n}\r\n\r\nfunction ui(state = {architectureLevel: 'WorkShop', search: ''}, action)\r\n{\r\n\tswitch (action.type)\r\n\t{\r\n\t\tcase SET_ARCHITECTURE_LEVEL:\r\n\t\t\treturn { ...state, architectureLevel: action.architectureLevel }\r\n\t\tcase SET_SEARCH:\r\n\t\t\treturn { ...state, search: action.search }\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n\tentities,\r\n\tsession,\r\n\tui\r\n}) \r\nexport default rootReducer\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nimport App from './components/App/App.js';\r\nimport Login from './components/Login/Login.js'\r\nimport CourseItem from './components/CourseItem/CourseItem'\r\nimport rootReducer from './reducers'\r\n\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport { Provider } from 'react-redux' // provide access to state across all components/containers\r\nimport thunkMiddleware from 'redux-thunk' // use for async actions\r\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom'\r\n\r\n\r\n// Import Bootstrap\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst store = createStore( rootReducer, applyMiddleware( thunkMiddleware ) )\r\n\r\nReactDOM.render(\r\n\t<Provider store={ store }>\r\n\t\t<BrowserRouter>\r\n\t\t\t<div className='BrowserRouterWrapper'>\r\n\t\t\t\t{ ( !store.getState().session.expiresAt || !store.getState().session.expiresAt > Date.now() ) && // temporary redirect to login if user session is not defined\r\n\t\t\t\t\t<Redirect to='/login' />\t\r\n\t\t\t\t}\r\n\t\t\t\t<Route component={Login} path='/login' />\r\n\t\t\t\t<Route component={ store.getState().session.expiresAt && store.getState().session.expiresAt > Date.now() ? App : null} exact path='/:currentComponent?' />\r\n\t\t\t\t<Route component={App} exact path='/courses/:courseId' />\r\n\t\t\t\t<Route component={App} path='/courses/:courseId/:courseItemId' />\r\n\t\t\t\t<Route component={CourseItem} path='/courses/:courseId/:courseItemId' />\r\n\t\t\t</div>\r\n\t\t</BrowserRouter>\r\n\t</Provider>\r\n\t, document.getElementById('root'));\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}